@model WebStoreHouse.Models.E_StoreHouseStock

<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/PagedList.css" rel="stylesheet" />
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            text-align: left;
            padding: 8px;
            border: 1px solid black;
        }

        th {
            background-color: #ddd;
        }

        @@media print {
            table, th, td {
                border: 1px solid black;
            }
        }
    </style>
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <script>
        function clearTextBox() {
            document.getElementById("wono").value = "";
        }

        
        $(document).ready(function () {
            var isActiveChecked = $('input[name="isActive"]').is(':checked');

            function checkInputData() {
                var input = $("#wono").val();
                $.ajax({
                    type: "POST",
                    url: "/Function/CheckData",
                    data: { input: input },
                    success: function (response) {
                        if (response.result == "not found") {
                            alert("沒有找到相關資料！");
                        }
                    },
                    error: function () {
                        alert("請求失敗！");
                    }
                });
            }

            $("#wono").on("blur", function () {
                if (!isActiveChecked) {
                    checkInputData();
                }
            });

            $('input[name="isActive"]').on("change", function () {
                isActiveChecked = $(this).is(":checked");
                if (isActiveChecked) {
                    $("#wono").off("blur");
                }
                else {
                    $("#wono").on("blur", checkInputData);
                }
            });
        });

    </script>
    <div class="form-horizontal">
        <hr />
        <h4>倉庫庫存新增</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">無業單新增</label>
            <div class="col-md-10">
                @Html.CheckBox("isActive", false)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">群組</label>
            <div class="col-md-10">
                <label class="control-label col-md-2" hidden="hidden">@TempData["IGroup"]</label>
                @if (!string.IsNullOrEmpty(Session["IGroup"].ToString()))
                {
                    <input type="submit" value="Group" class="btn btn-default" id="buttonName" name="buttonName" disabled="disabled" />
                    <input type="submit" value="unGroup" class="btn btn-default" id="buttonName" name="buttonName" />
                }
                else
                {
                    <input type="submit" value="Group" class="btn btn-default" id="buttonName" name="buttonName" />
                }

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">工單</label>
            <div class="col-md-10">
                <input class="form-control" id="wono" name="wono" autocomplete="off" />
                @*@Html.EditorFor(model => model.wono, new { htmlAttributes = new { @class = "form-control", id = "wono", autocomplete = "off" } })*@
                @Html.ValidationMessageFor(model => model.wono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">數量</label>
            <div class="col-md-10">
                <input class="form-control" id="quantity" name="quantity" onkeyup="value=value.replace(/^(0+)|[^\d]+/g,'')" autocomplete="off" />
                @*@Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" , @onkeyup = "value=value.replace(/^(0+)|[^\d]+/g,'')" } })*@
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">箱數</label>
            <div class="col-md-10">
                <input class="form-control" id="box_quantity" name="box_quantity" autocomplete="off" value="0"
                       onkeyup="if (value!='' && value!='0' && !/^([1-9][0-9]*)$/.test(value)) value=value.replace(/^0|[^\d]/g,'')" />
                @*@Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" , @onkeyup = "value=value.replace(/^(0+)|[^\d]+/g,'')" } })*@
                @Html.ValidationMessageFor(model => model.box_quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">儲位</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">包裝</label>
            <div class="col-md-10">
                <select id="package" name="package" class="form-control">
                    <option value="">請選擇...</option>
                    <option value="Tary">1　|　Tray盤(Tray)</option>
                    <option value="Box">2　|　箱(Box)</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">備註</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.mark, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.mark, "", new { @class = "text-danger" })
            </div>
            <label class="control-label col-md-2"></label>
            <div class="col-md-10">
            </div>
        </div>
        
        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">
                @if (!string.IsNullOrEmpty(Session["IGroup"].ToString()))
                {
                    <button type="submit" name="buttonName" value="Again" class="btn btn-default">再一筆</button>
                }
                <button type="submit" name="buttonName" value="End" class="btn btn-default">結束送出</button>&emsp; &emsp;
                <label class="text-danger">@ViewBag.err</label>
                @*<input type="submit" value="Again" class="btn btn-default" name="buttonName" />
                <input type="submit" value="End" class="btn btn-default" name="buttonName" />*@
            </div>
        </div>

    </div>
}
